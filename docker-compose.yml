version: '3.8'

services:
  php:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: php_app
    volumes:
      - ./src/backend:/var/www/html
    ports:
      - "8000:80"
    networks:
      - app_network
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rootpassword
      - MYSQL_DATABASE=access_logs

  nuxt:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: nuxt_app
    volumes:
      - ./src/frontend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
      - PREFERRED_COLOR_SCHEME=light
      - NUXT_COLOR_MODE=light
    networks:
      - app_network
    depends_on:
      - php

  caddy:
    image: caddy:latest
    container_name: caddy_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - app_network
    depends_on:
      - php
      - nuxt

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: access_logs
    volumes:
    - mysql_data:/var/lib/mysql
    - ./db/seed:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
